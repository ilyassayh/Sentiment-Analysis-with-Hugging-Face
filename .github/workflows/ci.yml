name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Python tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    env:
      # Hugging Face caches in a writable, cached folder
      HF_HOME: ${{ github.workspace }}/.cache/huggingface
      TRANSFORMERS_CACHE: ${{ github.workspace }}/.cache/huggingface/transformers
      HUGGINGFACE_HUB_CACHE: ${{ github.workspace }}/.cache/huggingface/hub
      HF_HUB_DISABLE_TELEMETRY: "1"
      TRANSFORMERS_VERBOSITY: "error"
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Cache Hugging Face models
        uses: actions/cache@v4
        with:
          path: .cache/huggingface
          key: ${{ runner.os }}-hf-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-hf-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            pip install pytest
          fi

      - name: Show environment (debug)
        run: |
          python --version
          pip list | sed -n '1,120p'
          echo "HF_HOME=$HF_HOME"
          echo "TRANSFORMERS_CACHE=$TRANSFORMERS_CACHE"
          echo "HUGGINGFACE_HUB_CACHE=$HUGGINGFACE_HUB_CACHE"

      - name: Run pytest across the whole repo
        run: |
          pytest -q

  docker-build:
    name: Dockerfile build (smoke check)
    runs-on: ubuntu-latest
    needs: tests   # build only if tests pass
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: sentiment-api:ci
          provenance: false
